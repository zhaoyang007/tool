学习计划
1.基础
  1.html css 
  2.js
  3.es678910
2.框架
  vue, element-ui
3.原理
  浏览器渲染原理, js语言原理, 前端原理, 框架原理
4.超强的读写代码能力
5.工具使用
  git, webpack, ide, 调试, 抓包
6.算法
7.设计模式
8.后端
  node, c, java, php, python, http, nginx, mysql, redis

用的工具环境等有一个很重要的东西就是配置

5.解决问题能力
	出了问题，百度google时罗列关键词，注意细节。
	遇到问题时, 有的东西跟理解和想象的可能不一样, 所以试一试很重要。
	下载或调试的时候觉得卡住了，就多想一想，不要死住一个地方，觉得什么都不对。
	解决问题时也要这么找：github，npm，官方文档，最后才是查个人的博客文章等
	解决问题时的网站：stackoverflow.com，输入关键词或报错的关键词
6.自学能力：它是干嘛的，怎么用，内部原理是什么
	学习和使用一个开源代码的地方：github，npm，mdn，官方文档，最后才是查个人的博客文章等
7.理解产品业务逻辑能力 


学习
	1.源码。源码的过程是比较复杂的，所以我们首先要看他的代码就不要一下子把这个整个细节都去一次性看清楚，我们先从宏观上来
    看一下它整个过程是怎样的
	2.学习一个新的东西，可以先从一个简单的demo来运用某个方法，然后研究明白，并且清楚这个方法能做的事和什么情况下用这个方
    法做什么事然后相信这个方法能做的
	3.学习一个东西，可以从知识结构的最顶层开始，逐渐的往下细分去学习。
	4.自学一个东西，可以借助一些前人的有用的知识总结，祭奠，或方法。

需要提高的
	1.整体的知识体系结构
	2.强力的代码读写能力
	    1.先要有充足的知识储备（语法知识等）。知道一个东西怎么回事才能继续研究下去
	    2.去读，去钻研
	    3.读别人代码或看源码的时候，不要一味的跟着他的思路走，要每走一步然后自己想接下来的思路接下来该怎么	
        做，然后再与做的的代码做碰撞。要动脑想。
	3.原理或底层
	    当你知道一个东西完整的从下到上，从上到下从左到右，从右到左，完全的知道理解一个东西的时候，
	    这时候你可以不用在跟随以来别人创造吹来的方法或解决方案了，这时候你完全自己就能够创造出这样
	    的或跟别人类似的方法或解决方案了。

遇到的大部分功能和问题一般都能通过文档的给的方法或自己查找的方式解决，遇到的棘手的难的以上方法解决不了的
问题，这时候就可以通过通篇读通这个东西的源码来解决。是要在结合了解你做的这个东西相关的知识和原理的同时理
解阅读源码。

遇到一个问题，就像是这个框架的这个方法没生效，首先先不要怀疑框架这个方法写错了（一般官网上确定给出了的方法
一般情况下是不会有错的）而去看源码，而是要去看看跟有没有会影响这个方法的相关的配置或其他东西。最后实在解决
不了的问题就可以看源码去解决了。

做项目的时候，遇到问题也要深耕，真正的了解这个知识是怎么回事，而不是为了赶项目做出效果就行了，这样下次遇到还是有问题，
以前上学时的我不就是这样的吗。

所有东西都想一想为什么要这样做

超级小团体创业模式：让人感到温馨的，不害怕的，容易让人接受的。支持各种行业的创业，只是用这种模式

建立知识体系
刻意训练
然后形成自己的方法论

concept
note
core

学习方法
1.掌握知识体系
2.根据知识体系做大量的刻意训练，并实际运用
3.用自己的理解方式讲出来
4.根据上面两步再对知识做深入理解

一个框架或库的api
配置
属性
方法
事件
配置一般传到类里面去
属性方法和事件一般挂载到实例上去

再难的业务也可以通过一点一点地做出来

kpi
1.结果：具体做的那些项目
2.行为：在参与的项目中扮演了一个什么样的角色，比如主导还是协助还是打酱油
3.能力：也就是技术能力
前两项占的比重比较大，能力只是做为参考

业务理解能力
主动性
项目思维设计
总结复盘思考
记录能力

流程图框架
jointjs, jsplumb

前端工程化，浏览器原理，web安全，webGL，算法，自动化测试，网络优化，性能优化等至少一个方面深耕过并有自己深度思考或产出。

keys关键点
清晰，重要，一看到关键点就能知道所有重要的东西
记录一个东西的超级核心就能知道这个东西怎么回事，剩下细枝末节的东西去查看文档或百度google就行了。

心力脑力体力

前端工程搭建要点：安装，配置，使用

思维习惯是在解决问题的过程中养成的

以后的学习都要朝着深精透的方向去研究，而不要追求快和进度，一定要研究深，精，透

现在要做到的是除了具体的业务难点其他的都完全没问题，到时只专注解决不同的业务难点就行了。

学习掌握理解性记忆一个东西

learn now
1.vue第一轮            			 4.16 ～ 4.30
2.webpack第一轮       			 5.1 ～  5.15
3.html&css第一轮			 			 5.16 ～ 5.31
4.js第二轮             			 6.1 ～ 6.10
5.node第一轮								 6.11 ～ 6.15
6.浏览器工作原理第一轮       	 6.16 ～  6.25
7.webpack第二轮			 			 	 6.26 ～ 6.30
8.vue第二轮        		 			 7.1 ～ 7.5
9.js第三轮									 7.6 ～ 7.10
10.vue第三轮						 		 7.11  ～ 7.15
回京
1.简历和面试								  8.1  ～ 8.30
滞后
1.node											
2.数据结构算法											 

