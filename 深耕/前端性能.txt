https://segmentfault.com/a/1190000016529612

渲染操作dom优化：
  浏览器渲染6大步：
    在服务端拉过来hmtl
    1.生成dom树
    2.根据html中请求的css生成cssOM，css object model
    3.执行js脚本
    4.renderDom渲染树，为浏览器渲染做准备的
    5.布局：在页面的什么位置放什么
    6.绘制：一帧一帧的绘制出最终展现在我们面前的页面
  重置和重绘：
    重置会改变dom位置，重绘不会
    在scroll事件中避免重置，因为会一直在重置页面，一直走那6大步。
  优化历史：
    一开始完全无优化的append()
    到拼接字符串，将要操作的dom在js里拼接好，然后一次性append到dom中，但还有可能多次append操作
    到模板引擎，将整个body中的内容都变成字符串，比拼接字符串减少了append操作次数，但只在初始化渲染时有用。（模板引擎，angular和vue1.0）
    虚拟dom，初始化渲染和js事件操作，一切都是在用字符串拼接即虚拟dom中完成的，最后一次性append到body中，对于所有动作只走一次6大步。（react, vue2.0）

图片加载的优化是很重要的一块
